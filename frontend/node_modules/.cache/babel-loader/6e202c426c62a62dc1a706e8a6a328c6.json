{"ast":null,"code":"import _classCallCheck from \"/home/alok07/WebDev/MineCalc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/home/alok07/WebDev/MineCalc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/alok07/WebDev/MineCalc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/alok07/WebDev/MineCalc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport * as React from 'react';\nexport var BsPrefixComponent = /*#__PURE__*/function (_React$Component) {\n  _inherits(BsPrefixComponent, _React$Component);\n  function BsPrefixComponent() {\n    _classCallCheck(this, BsPrefixComponent);\n    return _possibleConstructorReturn(this, _getPrototypeOf(BsPrefixComponent).apply(this, arguments));\n  }\n  return BsPrefixComponent;\n}(React.Component);\n\n// Need to use this instead of typeof Component to get proper type checking.\n\nexport function getOverlayDirection(placement, isRTL) {\n  var bsDirection = placement;\n  if (placement === 'left') {\n    bsDirection = isRTL ? 'end' : 'start';\n  } else if (placement === 'right') {\n    bsDirection = isRTL ? 'start' : 'end';\n  }\n  return bsDirection;\n}","map":null,"metadata":{},"sourceType":"module"}